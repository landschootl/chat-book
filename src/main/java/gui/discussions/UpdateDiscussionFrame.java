package gui.discussions;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import domain.Discussion;
import domain.IUser;
import gui.AppFrame;
import service.UserService;

import javax.swing.*;
import java.awt.*;
import java.sql.SQLException;

/**
 * Created by landschoot on 11/12/16.
 */
public class UpdateDiscussionFrame extends AppFrame {
    private JPanel mainPanel;
    private JTextField titleField;
    private JButton addUserButton;
    private JButton removeUserButton;
    private JList friendsList;
    private JList usersList;
    private JLabel titleLabel;
    private JLabel managerLabel;
    private JButton saveButton;

    private Discussion discussion;
    private DefaultListModel<IUser> users;
    private DefaultListModel<IUser> friends;
    private UserService userService;

    public UpdateDiscussionFrame(Discussion discussion) {
        super();
        this.userService = UserService.getInstance();
        this.discussion = discussion;
        initComponents();
        initInformationsDiscution();
        initListUsers();
        initListFriends();
    }

    @Override
    public void initComponents() {
        this.setTitle("Gestion d'une discussion");
        this.setSize(400, 400);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setVisible(true);
        this.setContentPane(mainPanel);
    }

    public void initInformationsDiscution() {
        titleField.setText(discussion.getName());
        managerLabel.setText(managerLabel.getText() + discussion.getMod().getLogin());
    }

    public void initListUsers() {
        users = new DefaultListModel<>();
        for (IUser user : discussion.getUsers()) {
            users.addElement(user);
        }
        usersList.setModel(users);
    }

    public void initListFriends() {
        friends = new DefaultListModel<>();
        try {
            for (IUser friend : userService.findAll()) {
                if (!friendInTheUsers(friend)) {
                    friends.addElement(friend);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        friendsList.setModel(friends);
    }

    public boolean friendInTheUsers(IUser friend) {
        for (IUser user : discussion.getUsers()) {
            if (friend.getId() == user.getId()) {
                return true;
            }
        }
        return false;
    }

    public void initButton() {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 4, new Insets(10, 10, 10, 10), -1, -1));
        mainPanel.add(panel1, BorderLayout.NORTH);
        titleLabel = new JLabel();
        titleLabel.setText("Title");
        panel1.add(titleLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        titleField = new JTextField();
        titleField.setText("");
        panel1.add(titleField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        managerLabel = new JLabel();
        managerLabel.setText("GÃ©rant : ");
        panel1.add(managerLabel, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 3, new Insets(10, 10, 10, 10), -1, -1));
        mainPanel.add(panel2, BorderLayout.CENTER);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        friendsList = new JList();
        scrollPane1.setViewportView(friendsList);
        final JScrollPane scrollPane2 = new JScrollPane();
        panel2.add(scrollPane2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        usersList = new JList();
        scrollPane2.setViewportView(usersList);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.add(panel3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        addUserButton = new JButton();
        addUserButton.setBackground(new Color(-12390858));
        addUserButton.setEnabled(true);
        addUserButton.setFont(new Font(addUserButton.getFont().getName(), Font.BOLD, 12));
        addUserButton.setForeground(new Color(-16777216));
        addUserButton.setText("->");
        panel3.add(addUserButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        removeUserButton = new JButton();
        removeUserButton.setBackground(new Color(-2212278));
        removeUserButton.setEnabled(true);
        removeUserButton.setFont(new Font(removeUserButton.getFont().getName(), Font.BOLD, 12));
        removeUserButton.setForeground(new Color(-16777216));
        removeUserButton.setHideActionText(false);
        removeUserButton.setText("<-");
        panel3.add(removeUserButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Sauvegarder");
        mainPanel.add(saveButton, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
